(window.webpackJsonp=window.webpackJsonp||[]).push([[63],{400:function(s,a,t){"use strict";t.r(a);var n=t(14),e=Object(n.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"总体概览"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总体概览"}},[s._v("#")]),s._v(" 总体概览")]),s._v(" "),a("h2",{attrs:{id:"基础渲染"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基础渲染"}},[s._v("#")]),s._v(" 基础渲染")]),s._v(" "),a("h3",{attrs:{id:"创建一个canvas画布"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建一个canvas画布"}},[s._v("#")]),s._v(" 创建一个canvas画布")]),s._v(" "),a("h3",{attrs:{id:"创建场景-scene"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建场景-scene"}},[s._v("#")]),s._v(" 创建场景-scene")]),s._v(" "),a("p",[s._v("定义：添加3D对象的地方，在实际开发中场景是透明的、看不见的，需要做相关的设置")]),s._v(" "),a("p",[s._v("作用")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("    Scene 对象是所有不同对象的容器，也就是说该对象保存所有物体、光源、摄像机以及渲染所需的其他对象。\n    Scene 对象又是被称为场景图，它不仅仅是一个对象数组，还包含了整个场景图树形结构中的所有节点：\n     * 每个添加到 Three.js 场景的对象，甚至包括 THREE.Scene 本身都是继承自一个名为 THREE.Object3D 的对象。\n     * 每个 THREE.Object3D 对象也可以有自己的子对象，我们可以使用它的子对象来创建一个 Three.js 能解释和渲染的对象树。\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("常用方法及属性")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("    add(object)： 用于向场景中添加对象。使用该方法还可以创建对象组。\n    children：用于返回一个场景中所有对象的列表，包括摄像机和光源。\n    getObjectByName(name,recursive)：在创建对象时可以指定唯一的标识 name，使用该方法可以查找特定名字的对象。\n     * 当参数 recursive 设置为 false 时，在调用者子元素上查找\n     * 当参数 recursive 设置为 true 时，在调用者的所有后代对象上查找\n\n    remove(object)： object 为场景中对象的引用，使用该方法可以将对象从场景中移除。  \n    traverse(function)：该方法也可以遍历调用者和调用者的所有后代，function 参数是一个函数，被调用者和每一个后代对象调用 function 方法。\n    fog ：使用该属性可以为场景添加雾化效果，可以产生隐藏远处物体的浓雾效果。  \n    overrideMaterial：使用该属性可以强制场景中的所有物体使用相同的材质。\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("p",[s._v("scene场景的结构")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("group\n    group\n        mesh\n        line\n        point\n\n    group\n        mesh\n        line\n        point\n\n\ngroup\n    group\n        mesh\n        line\n        point\n\n\ngroup\n    mesh\n    line\n    point\n\nlight\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br")])]),a("h3",{attrs:{id:"光源"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#光源"}},[s._v("#")]),s._v(" 光源")]),s._v(" "),a("p",[s._v("光源的类型")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("    环境光（AmbientLight）\n        该光源没有特定的方向，不会产生阴影。\n\n    点光源（PointLight）\n        一个向各个方向发光的光源从一个点发出。\n\n    定向光（DirectionalLight）\n        发出的所有光线彼此平行，太阳就是一个很好的例子。\n\n    聚光灯（SpotLight）\n        最常使用的灯之一（尤其是如果您想要使用阴影），THREE.SpotLight是一种具有锥形效果的光源，你可以将其与手电筒或灯笼进行比较，这种光有方向和角度它产生光。\n\n    半球光（HemisphereLight ）\n    区域光（AreaLight）\n    镜头光晕（LensFlare）\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br")])]),a("p",[s._v("创建光源")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("    1.创建光源\n    2.设置光源的位置\n    3.打开或者关闭阴影\n    4.将光源添加进入场景\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("h3",{attrs:{id:"相机-camera"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#相机-camera"}},[s._v("#")]),s._v(" 相机-camera")]),s._v(" "),a("p",[s._v("相机的类型：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("    1.正交相机orthographic：在这种投影模式下，渲染图像中的对象大小保持不变，无论其与相机的距离如何。这对于渲染 2D 场景和 UI 元素等非常有用。\n    2.透视相机perspective：这种投影模式旨在模仿人眼看到的方式。它是用于渲染 3D 场景的最常见的投影模式。\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("创建相机")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("    1.创建相机（PerspectiveCamera）\n    2.设置相机的位置\n    3.设置相机以那个方向为上方\n    4.设置相机看向那个坐标\n    5.将相机添加进入场景\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("h3",{attrs:{id:"创建渲染器-renderer-webglrenderer"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建渲染器-renderer-webglrenderer"}},[s._v("#")]),s._v(" 创建渲染器-renderer（WebGLRenderer）")]),s._v(" "),a("h3",{attrs:{id:"模型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#模型"}},[s._v("#")]),s._v(" 模型")]),s._v(" "),a("p",[s._v("几何体")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("    缓冲类几何体（BufferGeometry）\n    长方体（BoxGeometry）\n    圆柱体、圆锥、三面体、四面体（梯形）（CircleGeometry）\n    圆锥体（ConeGeometry）\n    球体（SphereGeometry）\n    立方体边框（BoxHelper）\n        入参：模型和颜色\n            边框不需要进行设定位置，会自动在模型边上进行吸附\n\n\n    圆柱体、梯形边框（EdgesGeometry）\n        let cubeGeometry = new THREE.CylinderGeometry((80, 80, 50, 40, 40)   // 创建一个圆柱材质\n        let cylinderEdges = new THREE.EdgesGeometry(cubeGeometry, 1);   // 创建一个圆柱边框\n        let edgesMtl = new THREE.LineBasicMaterial({ color: ‘red’})  // 创建基础线条材质\n        let border = new THREE.LineSegments(cylinderEdges, edgesMtl);  //  创建线框\n        cube.add(border );   // 将线框加入几何体中\n    \n    不规则模型（Shape）\n        先使用Shape创建一个不规则平面（使用点到点连线）\n        再将平面加厚则可以得到一个不规则模型\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br")])]),a("p",[s._v("创建模型mesh")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("    1.创建几何体\n    2.创建材质\n    3.设置几何体位置\n    4.添加进入场景scene\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("引入模型")]),s._v(" "),a("p",[a("code",[s._v("three.js")]),s._v("可以引入的模型格式有以下几种：gltf、obj、stl、FBX(没试过)，推荐使用gltf格式，gltf格式的模型可以进行压缩，体积更小，加载更快。")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 引入模型")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("loadFenceModel")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("options "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Promise")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("resolve")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" width"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" height "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" options\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// gltf格式")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" dracoLoader "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("DRACOLoader")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        dracoLoader"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("setDecoderPath")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/gltf/'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// public/gltf")]),s._v("\n        dracoLoader"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("preload")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" loader "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("GLTFLoader")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        loader"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("setDRACOLoader")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("dracoLoader"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        loader"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("load")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("gltf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            gltf"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("scene"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("traverse")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" index")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// if (object.isMesh) { // 调整模型中心点")]),s._v("\n                "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//     object.applyMatrix4(new THREE.Matrix4().makeTranslation(0, 0, 0))")]),s._v("\n                "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// }")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" carMesh "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" gltf"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("scene\n            carMesh"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'car-mesh'")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// carMesh.scale.set(50, 50, 50)")]),s._v("\n            carMesh"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("scale"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" width"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" height"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n            carMesh"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("position"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// console.log(carMesh);")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// console.log(this, 'this');")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("scene"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("carMesh"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("resolve")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// obj格式")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// const objLoader = new OBJLoader()")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// objLoader.load(path, (object) => {")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//     console.log(object, '9999')")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//     console.log(this, '00000')")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//     object.castShadow = true")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//     object.receiveShadow = true")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//     object.scale.set(50, 50, 50)")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//     object.position.set(0, 0, 0)")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//     this.scene.add(object)")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//     resolve()")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// })")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// stl格式")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// const stlLoader = new STLLoader()")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// stlLoader.load(path, (geometry) => {")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//     const material = new THREE.MeshPhongMaterial({ color: 0xff5533, specular: 0x111111, shininess: 200 });")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//     const mesh = new THREE.Mesh(geometry, material)")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//     mesh.scale.set(0.2, 0.2, 0.2)")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//     mesh.position.set(0, 0, 0)")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//     this.scene.add(mesh)")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//     resolve()")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// })")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br"),a("span",{staticClass:"line-number"},[s._v("43")]),a("br"),a("span",{staticClass:"line-number"},[s._v("44")]),a("br"),a("span",{staticClass:"line-number"},[s._v("45")]),a("br"),a("span",{staticClass:"line-number"},[s._v("46")]),a("br"),a("span",{staticClass:"line-number"},[s._v("47")]),a("br"),a("span",{staticClass:"line-number"},[s._v("48")]),a("br"),a("span",{staticClass:"line-number"},[s._v("49")]),a("br"),a("span",{staticClass:"line-number"},[s._v("50")]),a("br")])]),a("h3",{attrs:{id:"边框"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#边框"}},[s._v("#")]),s._v(" 边框")]),s._v(" "),a("p",[s._v("给模型添加边框的两种方式")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 方法一：")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" cubeGeometry "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("THREE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("BoxGeometry")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("90")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" cube "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("THREE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Mesh")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("cubeGeometry"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" cubeMaterial"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" cubeMaterial "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("THREE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("MeshLambertMaterial")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("color")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'red'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 将需要的参数加入group中")]),s._v("\ngroup"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("cube"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" border "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("THREE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("BoxHelper")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("cube"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'red'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\ngroup"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("border"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[a("strong",[s._v("注意1：用这种方法，只适合与立方体")])]),s._v(" "),a("p",[a("strong",[s._v("注意2：用这种方法，比如我要旋转立方体，边框不会跟着改变。")])]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 方法二：")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" cubeGeometry "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("THREE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("CylinderGeometry")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("50")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("40")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("40")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 创建一个圆柱材质")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" cylinderEdges "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("THREE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("EdgesGeometry")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("cubeGeometry"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 创建一个圆柱边框")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" edgesMtl "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("THREE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("LineBasicMaterial")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("color")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'red'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 创建基础线条材质")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" border "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("THREE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("LineSegments")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("cylinderEdges"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" edgesMtl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//  创建线框")]),s._v("\ncube"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("border "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 将线框加入几何体中")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[a("strong",[s._v("注意：用这种方法，比如我要旋转立方体，边框会跟着改变。")])]),s._v(" "),a("h2",{attrs:{id:"功能"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#功能"}},[s._v("#")]),s._v(" 功能")]),s._v(" "),a("h3",{attrs:{id:"模型拖动"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#模型拖动"}},[s._v("#")]),s._v(" 模型拖动")]),s._v(" "),a("p",[s._v("鼠标拖动DragControls属性")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("    dragstart：开始移动\n    drag：移动中\n    dragend：结束移动\n    hoveron：移动鼠标在模型上\n    hoveroff：移动鼠标离开模型\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("键盘按键移动")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("    addEventListener()\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("创建模型拖动")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("    1.创建模型拖动对象（DragControls）\n        传入mesh集合、相机对象、渲染器对象\n\n    2.创建拖动事件\n        可以改变拖动颜色，获取拖动后的坐标等等\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("h3",{attrs:{id:"碰撞检测-raycaste、box3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#碰撞检测-raycaste、box3"}},[s._v("#")]),s._v(" 碰撞检测（Raycaste、Box3）")]),s._v(" "),a("p",[s._v("Raycaste()：在物体的各个顶点发出射线，计算是否和其他物体相交。")]),s._v(" "),a("p",[s._v("Box3()：在物体上创建包围盒，计算两个物体包围盒是否相交。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("    1.创建当前拖动的mesh为meshA\n        let meshA = new THREE.Box3(new THREE.Vector3(), new THREE.Vector3())\n\n    2.循环其他需要参与碰撞检测的mesh\n    3.创建循环体内将每一个mesh为meshB\n        let meshB= new THREE.Box3(new THREE.Vector3(), new THREE.Vector3())\n\n    4.判断meshA是否与meshB重合（meshA.intersectsBox(meshB)）\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("p",[a("strong",[s._v("注意：碰撞检测，检测的是最外层mesh")])]),s._v(" "),a("h3",{attrs:{id:"视角切换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#视角切换"}},[s._v("#")]),s._v(" 视角切换")]),s._v(" "),a("p",[s._v("补间动画（TWEEN.Tween）: 让视角切换更平滑")]),s._v(" "),a("p",[s._v("设置相机位置（position.set）")]),s._v(" "),a("h3",{attrs:{id:"模型贴图"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#模型贴图"}},[s._v("#")]),s._v(" 模型贴图")]),s._v(" "),a("p",[s._v("贴canvas（CanvasTexture）")]),s._v(" "),a("ol",[a("li",[s._v("创建一个canvas元素")]),s._v(" "),a("li",[s._v("作为一个参数传入THREE.CanvasTexture")]),s._v(" "),a("li",[s._v("贴图纹理更新texture.needsUpdate = true")])]),s._v(" "),a("p",[s._v("贴图片TextureLoader()")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" texture "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("THREE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("TextureLoader")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("load")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/favico.ico'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\ntexture"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("wrapS "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("THREE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("RepeatWrapping\ntexture"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("wrapT "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("THREE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("RepeatWrapping\nmeshParamsNo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("map "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" texture\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("h2",{attrs:{id:"智能装箱功能"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#智能装箱功能"}},[s._v("#")]),s._v(" 智能装箱功能")]),s._v(" "),a("h3",{attrs:{id:"创建字体-textgeometry"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建字体-textgeometry"}},[s._v("#")]),s._v(" 创建字体（TextGeometry）")]),s._v(" "),a("ol",[a("li",[s._v("创建字体对象（FontLoader）")]),s._v(" "),a("li",[s._v("引入字体json文件")]),s._v(" "),a("li",[s._v("创建文字几何图形（TextGeometry）")]),s._v(" "),a("li",[s._v("创建文字的正面和侧面集合（MeshPhongMaterial）")]),s._v(" "),a("li",[s._v("创建一个mesh模型将文字几何图形和文字集合放入其中")]),s._v(" "),a("li",[s._v("将mesh模型加入场景中")])]),s._v(" "),a("h3",{attrs:{id:"创建三维坐标轴-axeshelper"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建三维坐标轴-axeshelper"}},[s._v("#")]),s._v(" 创建三维坐标轴（AxesHelper）")]),s._v(" "),a("ol",[a("li",[s._v("创建三维坐标系")]),s._v(" "),a("li",[s._v("创建好坐标系将其加入场景中")])]),s._v(" "),a("h3",{attrs:{id:"创建线条-line"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建线条-line"}},[s._v("#")]),s._v(" 创建线条（Line）")]),s._v(" "),a("ol",[a("li",[s._v("创建材质（LineBasicMaterial）")]),s._v(" "),a("li",[s._v("创建空间几何体（BufferGeometry）")]),s._v(" "),a("li",[s._v("创建顶点集合（Vector3）")]),s._v(" "),a("li",[s._v("绑定顶点到创建好的空间几何体（setFromPoints）")]),s._v(" "),a("li",[s._v("创建线条（Line）")]),s._v(" "),a("li",[s._v("将线条添加进场景中")])]),s._v(" "),a("h3",{attrs:{id:"创建控件对象-orbitcontrols"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建控件对象-orbitcontrols"}},[s._v("#")]),s._v(" 创建控件对象（OrbitControls）")]),s._v(" "),a("ol",[a("li",[s._v("创建控件对象（OrbitControls）")]),s._v(" "),a("li",[s._v("修改鼠标控制事件\n"),a("ul",[a("li",[s._v("上下滚动鼠标中键：缩放三维场景")]),s._v(" "),a("li",[s._v("鼠标左键：720旋转展示三维场景")]),s._v(" "),a("li",[s._v("鼠标右键：可以平移三维场景（关闭）")])])])]),s._v(" "),a("h2",{attrs:{id:"优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#优化"}},[s._v("#")]),s._v(" 优化")]),s._v(" "),a("p",[a("strong",[s._v("注意：避免重复创建模型对象，可以使用clone()方法")])]),s._v(" "),a("ul",[a("li",[s._v("clone()返回一个新的几何体对象，返回新的几何体对象包含原来的几何体顶点数据、顶点索引数据、UV坐标数据。")]),s._v(" "),a("li",[s._v("threejs中的clone方法是一个浅度的clone，clone复制了新的对象，但是原对象内部的对象（属性为对象）不会被clone，我们需要对内部对象也进行clone就可以")])]),s._v(" "),a("p",[s._v("常见问题")]),s._v(" "),a("ul",[a("li",[s._v("在用copy()和clone()进行对象复制后，使用Raycaster射线做obj模型选择时，使用clone方式选择指定对象对其颜色进行增强，但是修改新对象的material原皮肤也变更。")]),s._v(" "),a("li",[s._v("在使用模型拖动的时候，当前页面/场景会出现卡顿现象，这是因为模型拖动的过程中，会不断的进行渲染，导致页面卡顿，可以使用requestAnimationFrame()方法来降低场景渲染帧率进行优化。")])])])}),[],!1,null,null,null);a.default=e.exports}}]);